/*
 * MainWindow.java
 *
 * Created on __DATE__, __TIME__
 */

package com.csust.views;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.List;
import java.util.Vector;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

import com.csust.dao.YaoDAOImpl;
import com.csust.listener.MainWindow_ActionListener;
import com.csust.listener.MainWindow_KeyListener;
import com.csust.model.Employee;
import com.csust.model.Yao;
import com.csust.utils.ExcelUtils;
import com.csust.utils.PositionHelper;
import com.csust.utils.TextUtils;


public class MainWindow extends javax.swing.JFrame {

	private Employee emp; //职员
	private DefaultTableModel tableModel; //表格的模型
	private List<Yao> list;  //放置职员的list容器
	private Vector<String> columnNames; //表格的标题

	/** 创建一个主界面的窗口 */
	public MainWindow(Employee emp) {
		this.emp = emp;
		initComponents();
		list = new YaoDAOImpl().getAllYao();//获取数据库的操作对象
		Vector<Vector<Object>> data = new Vector<Vector<Object>>(); //表格集合
		columnNames = new Vector<String>();
		//添加药品到表格中
		for (Yao yao : list) {
			Vector<Object> item = new Vector<Object>();
			item.addElement(yao.getBianhao());
			item.addElement(yao.getName());
			item.addElement(yao.getType());
			item.addElement(yao.getSellPrice());
			item.addElement(yao.getPifaPrice());
			item.addElement(yao.getRemainCount());
			data.add(item);
		}
		columnNames.addElement("编号");
		columnNames.addElement("名称");
		columnNames.addElement("类型");
		columnNames.addElement("售价");
		columnNames.addElement("批发价");
		columnNames.addElement("库存");

		tableModel = new DefaultTableModel(data, columnNames);
		jTable1.setModel(tableModel);
		jTable1.getTableHeader().setBackground(new Color(166, 202, 240));
		// Microsoft YaHei UI 20 Plain
		jTable1.getTableHeader().setFont(
				new Font("Microsoft YaHei UI", Font.BOLD, 24));

		PositionHelper.centerInScreen(this);
		setTitle("华佗大药房---" + emp.toString());
		// setExtendedState(JFrame.MAXIMIZED_BOTH);
		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setVisible(true);
	}
	
	public void btn_SellPerformed(){
		new SellDia(this, true);
	}

	public void btn_DaoChuPerformed() {
//		System.out.println("daochu");
		JFileChooser chooser = new JFileChooser();
		if(chooser.showSaveDialog(this)==1){
			return;
		}
		String path = chooser.getCurrentDirectory().getPath();
		String path1 = path.replace('\\','/');
		String fileName = chooser.getSelectedFile().getName();
		String realPath = path1+"/"+fileName;
		
		list = new YaoDAOImpl().getAllYao();
//		int row = jTable1.getRowCount();
//		String remain[] = new String[row];
//		for(int i =0;i<row;i++){
//			String remainCount = String.valueOf((Integer) jTable1.getValueAt(i, 5));
//			remain[i] = remainCount;
//			System.out.println(list.get(i).toString()+",库存："+remainCount);
//		}
		if(ExcelUtils.exportYaoTypeExcel(list,realPath)){
			JOptionPane.showMessageDialog(this, "导出成功");
		}
	}
	
	public void enterDownPerformed() {
		btn_ChaXunPerformed();
	}

	public void btn_ChaXunPerformed() {
		String name = jTextField1.getText().toString();
		if (name == null || "".equals(name)) {
			JOptionPane.showMessageDialog(this, "请输入要查找的药品名称【支持模糊查询】");
		} else {
			Vector<Vector<Object>> data = new Vector<Vector<Object>>();
			for (Yao yao : list) {
				if (yao.getName().contains(name)) {
					Vector<Object> item = new Vector<Object>();
					item.addElement(yao.getBianhao());
					item.addElement(yao.getName());
					item.addElement(yao.getType());
					item.addElement(yao.getSellPrice());
					item.addElement(yao.getPifaPrice());
					item.addElement(yao.getRemainCount());
					data.add(item);
				}
			}
			jTable1.setModel(new DefaultTableModel(data, columnNames));
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jScrollPane1 = new javax.swing.JScrollPane();
		jList1 = new javax.swing.JList();
		jLabel1 = new javax.swing.JLabel();
		jTextField1 = new javax.swing.JTextField();
		jTextField1.addKeyListener(new MainWindow_KeyListener(this));

		jButton1 = new javax.swing.JButton();
		jLabel2 = new javax.swing.JLabel();
		jScrollPane2 = new javax.swing.JScrollPane();
		jTable1 = new javax.swing.JTable();
		jButton2 = new javax.swing.JButton();
		jButton3 = new javax.swing.JButton();

		jButton1.setActionCommand("chaxun");
		jButton1.addActionListener(new MainWindow_ActionListener(this));
		
		jButton2.setActionCommand("daochu");
		jButton2.addActionListener(new MainWindow_ActionListener(this));
		
		jButton3.setActionCommand("chushou");
		jButton3.addActionListener(new MainWindow_ActionListener(this));
		
		setFont(new java.awt.Font("Agency FB", 0, 24));
		setResizable(false);

		jList1.setFixedCellHeight(40);
		jList1.setBackground(new java.awt.Color(255, 251, 240));
		jList1.setBorder(javax.swing.BorderFactory.createTitledBorder(
				javax.swing.BorderFactory
						.createTitledBorder(javax.swing.BorderFactory
								.createTitledBorder("")),
				"\u836f\u54c1\u5206\u7c7b",
				javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,
				javax.swing.border.TitledBorder.TOP, new java.awt.Font(
						"Microsoft YaHei UI", 0, 24)));
		jList1.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 20));
		jList1.setModel(new javax.swing.AbstractListModel() {
			String[] strings = { "全部药品", "中药", "西药", "处方内", "处方外", "非处方内",
					"非处方外" };

			public int getSize() {
				return strings.length;
			}

			public Object getElementAt(int i) {
				return strings[i];
			}
		});
		jList1.setAlignmentX(20.0F);
		jList1.setAlignmentY(60.0F);
		jList1.addListSelectionListener(new ListSelectionListener() {

			@Override
			public void valueChanged(ListSelectionEvent e) {
				changeTable(jList1.getSelectedValue().toString());
			}

			public void changeTable(String str) {
				if (str.equals("全部药品")) {
					jTable1.setModel(tableModel);
				} else if (str.equals("中药")) {
					Vector<Vector<Object>> data = new Vector<Vector<Object>>();
					for (Yao yao : list) {
						if (yao.getType().equals("中药")) {
							Vector<Object> item = new Vector<Object>();
							item.addElement(yao.getBianhao());
							item.addElement(yao.getName());
							item.addElement(yao.getType());
							item.addElement(yao.getSellPrice());
							item.addElement(yao.getPifaPrice());
							item.addElement(yao.getRemainCount());
							data.add(item);
						}
					}
					jTable1.setModel(new DefaultTableModel(data, columnNames));
				} else if (str.equals("西药")) {
					Vector<Vector<Object>> data = new Vector<Vector<Object>>();
					for (Yao yao : list) {
						if (yao.getType().equals("西药")) {
							Vector<Object> item = new Vector<Object>();
							item.addElement(yao.getBianhao());
							item.addElement(yao.getName());
							item.addElement(yao.getType());
							item.addElement(yao.getSellPrice());
							item.addElement(yao.getPifaPrice());
							item.addElement(yao.getRemainCount());
							data.add(item);
						}
					}
					jTable1.setModel(new DefaultTableModel(data, columnNames));
				} else if (str.equals("处方内")) {
					Vector<Vector<Object>> data = new Vector<Vector<Object>>();
					for (Yao yao : list) {
						if (yao.getType().equals("处方内")) {
							Vector<Object> item = new Vector<Object>();
							item.addElement(yao.getBianhao());
							item.addElement(yao.getName());
							item.addElement(yao.getType());
							item.addElement(yao.getSellPrice());
							item.addElement(yao.getPifaPrice());
							item.addElement(yao.getRemainCount());
							data.add(item);
						}
					}
					jTable1.setModel(new DefaultTableModel(data, columnNames));
				} else if (str.equals("处方外")) {
					Vector<Vector<Object>> data = new Vector<Vector<Object>>();
					for (Yao yao : list) {
						if (yao.getType().equals("处方外")) {
							Vector<Object> item = new Vector<Object>();
							item.addElement(yao.getBianhao());
							item.addElement(yao.getName());
							item.addElement(yao.getType());
							item.addElement(yao.getSellPrice());
							item.addElement(yao.getPifaPrice());
							item.addElement(yao.getRemainCount());
							data.add(item);
						}
					}
					jTable1.setModel(new DefaultTableModel(data, columnNames));
				} else if (str.equals("非处方内")) {
					Vector<Vector<Object>> data = new Vector<Vector<Object>>();
					for (Yao yao : list) {
						if (yao.getType().equals("非处方内")) {
							Vector<Object> item = new Vector<Object>();
							item.addElement(yao.getBianhao());
							item.addElement(yao.getName());
							item.addElement(yao.getType());
							item.addElement(yao.getSellPrice());
							item.addElement(yao.getPifaPrice());
							item.addElement(yao.getRemainCount());
							data.add(item);
						}
					}
					jTable1.setModel(new DefaultTableModel(data, columnNames));
				} else if (str.equals("非处方外")) {
					Vector<Vector<Object>> data = new Vector<Vector<Object>>();
					for (Yao yao : list) {
						if (yao.getType().equals("非处方外")) {
							Vector<Object> item = new Vector<Object>();
							item.addElement(yao.getBianhao());
							item.addElement(yao.getName());
							item.addElement(yao.getType());
							item.addElement(yao.getSellPrice());
							item.addElement(yao.getPifaPrice());
							item.addElement(yao.getRemainCount());
							data.add(item);
						}
					}
					jTable1.setModel(new DefaultTableModel(data, columnNames));
				}
			}
		});

		jScrollPane1.setViewportView(jList1);

		jLabel1.setText("\u67e5\u627e\uff1a");

		jButton1.setText("\u67e5\u8be2");

		jLabel2.setText("\uff08\u8f93\u5165\u540d\u79f0\uff0c\u652f\u6301\u6a21\u7cca\u5339\u914d\uff09");

		jTable1.setBackground(new java.awt.Color(255, 251, 240));
		jTable1.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 20));
		jTable1.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] { { null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null },
						{ null, null, null, null, null, null } }, new String[] {
						"编号", "名称", "类别", "售价", "批发价", "库存" }));
		jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
		jTable1.setRowHeight(30);
		jTable1.setRowMargin(10);
		jScrollPane2.setViewportView(jTable1);

		jButton2.setText("\u5bfc\u51fa");

		jButton3.setText("\u51fa\u552e");

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				layout.createSequentialGroup().addComponent(jScrollPane1,

				javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
						.addGroup(layout.createParallelGroup(

						javax.swing.GroupLayout.Alignment.LEADING).addGroup(

						layout.createSequentialGroup()

						.addGap(95, 95,

						95)

						.addComponent(

						jLabel1)

						.addPreferredGap(

						javax.swing.LayoutStyle.ComponentPlacement.RELATED)

						.addComponent(

						jTextField1,

						javax.swing.GroupLayout.PREFERRED_SIZE,

						155,

						javax.swing.GroupLayout.PREFERRED_SIZE)

						.addPreferredGap(

						javax.swing.LayoutStyle.ComponentPlacement.RELATED)

						.addComponent(

						jButton1)

						.addPreferredGap(

						javax.swing.LayoutStyle.ComponentPlacement.RELATED)

						.addComponent(

						jLabel2)).addGroup(

						layout.createSequentialGroup()

						.addGap(219,

						219,

						219)

						.addComponent(

						jButton3,

						javax.swing.GroupLayout.PREFERRED_SIZE,

						114,

						javax.swing.GroupLayout.PREFERRED_SIZE)

						.addGap(203,

						203,

						203)

						.addComponent(

						jButton2,

						javax.swing.GroupLayout.PREFERRED_SIZE,

						114,

						javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(

						layout.createSequentialGroup()

						.addPreferredGap(

						javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)

						.addComponent(

						jScrollPane2,

						javax.swing.GroupLayout.PREFERRED_SIZE,

						928,

						javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addGap(48, 48, 48)));
		layout.setVerticalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				layout.createSequentialGroup()
						.addGroup(layout.createParallelGroup(

						javax.swing.GroupLayout.Alignment.TRAILING).addGroup(

						javax.swing.GroupLayout.Alignment.LEADING,

						layout.createSequentialGroup()

						.addGroup(

						layout.createParallelGroup(

						javax.swing.GroupLayout.Alignment.BASELINE)

						.addComponent(

						jLabel1)

						.addComponent(

						jButton1)

						.addComponent(

						jTextField1,

						javax.swing.GroupLayout.PREFERRED_SIZE,

						javax.swing.GroupLayout.DEFAULT_SIZE,

						javax.swing.GroupLayout.PREFERRED_SIZE)

						.addComponent(

						jLabel2))

						.addPreferredGap(

						javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)

						.addComponent(

						jScrollPane2,

						javax.swing.GroupLayout.PREFERRED_SIZE,

						607,

						javax.swing.GroupLayout.PREFERRED_SIZE)

						.addGap(34, 34,

						34)

						.addGroup(

						layout.createParallelGroup(

						javax.swing.GroupLayout.Alignment.LEADING)

						.addComponent(

						jButton2,

						javax.swing.GroupLayout.DEFAULT_SIZE,

						43,

						Short.MAX_VALUE)

						.addComponent(

						jButton3,

						javax.swing.GroupLayout.DEFAULT_SIZE,

						43,

						Short.MAX_VALUE))).addComponent(

						jScrollPane1,

						javax.swing.GroupLayout.DEFAULT_SIZE,

						737, Short.MAX_VALUE)).addGap(64, 64, 64)));

		pack();
	}// </editor-fold>
		// GEN-END:initComponents

	// GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JButton jButton3;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JList jList1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	public javax.swing.JTable jTable1;
	private javax.swing.JTextField jTextField1;
	// End of variables declaration//GEN-END:variables

}